// 자신의 주민번호 한 글자씩 모든 숫자를 원소로 갖는 배열 ssn을 정의
// --> 이 값은 가짜 주민번호로 실행결과는 유효하지 않은 주민번호로 판별.
ssn = [1,0,1,1,1,7,1,1,1,1,1,1,5];

// 정의된 배열을 활용하여 유효한 주민등록번호인지 판별

// 기본 주민등록코드에는 각 숫자에 대응하는 가중치가 있다. 가중치는 주민등록번호의 순서에 따라 `2 3 4 5 6 7 8 9 2 3 4 5` 이다.

let k = 2;  // -> 가중치 변수 k

// 마지막 숫자는 제외하고, 기본코드의 각 12자리와 가중치를 모두 곱하여 합한다.
let sum = 0;

for (let i=0; i<ssn.length-1; i++) {
    sum += ssn[i] * k;
    k++; // 다음번 숫자와 곱하기 위해 가중치르 1씩 증가

    // 가중치 값이 9보다 크면 2로 리셋
    if (k > 9) {
        k = 2;
    }
}

// 합한 값을 11로 나눈 나머지 값을 구한다.
let mod = sum % 11;

// 11에서 그 나머지 값을 뺀 후, 이를 10을 나눈 나머지를 구한다.
let x = (11 - mod) % 10

// 나머지의 1의 자리 값과 주민등록번호 마지막 자리 값이 맞아야 유효한 주민등록번호이다.
let y = x % 10;

if (y == ssn[ssn.length -1]) {
    console.log("유효한 주민번호");
} else {
    console.log("유효하지 않은 주민번호");
}
<?xml version="1.0" encoding="URF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ProfessorMapper">

    <!-- 데이터 저장을 위한 기능 정의 -->
    <insert id="insertItem">
    INSERT INTO professor (name, userid, position, sal, hiredate, comm, deptno) VALUES (#{name}, #{userid}, #{position}, #{sal}, #{hiredate}, #{comm}, #{deptno});
    </insert>

    <!-- 데이터 갱신을 위한 기능 정의 -->
    <update id="updateItem">
    UPDATE professor SET name=#{name}, userid=#{userid}, position=#{position}, sal=#{sal}, hiredate=#{hiredate}, comm=#{comm}, deptno=#{deptno}
    WHERE profno=#{profno};
    </update>

    <select id="selectJoin">
    SELECT 
      p.profno, p.name, p.userid, p.position, 
      p.sal, p.hiredate, p.comm, p.deptno, d.dname
    FROM professor AS `p`
    INNER JOIN department AS `d`
    ON p.deptno = d.deptno
    WHERE profno=#{profno}
    </select>

    <!-- 데이터 삭제를 위한 기능 정의 -->
    <delete id="deleteItem">
    DELETE FROM professor WHERE profno=#{profno};
    </delete>

    <!-- 단일행 조회를 위한 기능 정의 -->
    <select id="selectItem">
    select * FROM professor WHERE profno=#{profno};
    </select>

    <!-- 다중행 조회를 위한 기능 정의 -->
    <select id="selectList">
    select 
      p.profno, p.name, p.userid, p.position, 
      p.sal, p.hiredate, p.comm, p.deptno, d.dname
    FROM professor AS `p`
    INNER JOIN department AS `d`
    ON p.deptno = d.deptno
        <where>
            <if test="name != null and name != ''">
            name LIKE concat('%', #{name}, '%')
            </if>
        </where>
    ORDER BY profno DESC

        <!-- 페이지 구현을 위한 LIMIT절 추가 -->
        <if test="listCount > 0">
        LIMIT ${offset}, ${listCount}
        </if>
    </select>

    <!-- 데이터 수 조회하기 -->
    <select id="selectCountAll">
    SELECT COUNT(*) AS `cnt` FROM professor
        <where>
            <if test="name != null and name != ''">
            name LIKE concat('%', #{name}, '%')
            </if>
        </where>
    </select>

</mapper>